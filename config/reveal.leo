<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: https://leo-editor.github.io/leo-editor/leo_toc.html -->
<leo_file xmlns:leo="http://leo-editor.github.io/leo-editor/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2"/>
<globals/>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="leo.20180902120538.1"><vh>@settings</vh>
<v t="leo.20180902120538.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="leo.20180902120538.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="leo.20180902120523.1"><vh>編輯 reveal</vh>
<v t="leo.20180902120523.2"><vh>@path ./../reveal</vh>
<v t="leo.20220314205802.1"><vh>@clean index.html</vh>
<v t="leo.20220314205802.2"><vh>html</vh>
<v t="leo.20220314205802.3"><vh>head</vh></v>
<v t="leo.20220314205802.4"><vh>body</vh>
<v t="leo.20220314205802.5"><vh>reveal div</vh>
<v t="leo.20220314205802.6"><vh>slides div</vh>
<v t="leo.20220314205802.7"><vh>標題頁面</vh></v>
<v t="leo.20231124104819.1"><vh>計算機程式教學內容</vh></v>
<v t="leo.20231124111828.1"><vh>困難的地方在哪?</vh></v>
<v t="leo.20231124111734.1"><vh>網路設定</vh>
<v t="leo.20231124112803.1"><vh>有關網路設定</vh></v>
<v t="leo.20231124212507.1"><vh>1_cadlab_network_setup.bat</vh></v>
<v t="leo.20231124212126.1"><vh>1_2023_cadlab_network_setup.reg</vh></v>
<v t="leo.20231124212644.1"><vh>1_disable_ipv4.ps1</vh></v>
</v>
<v t="leo.20231124215258.1"><vh>C 程式語言</vh>
<v t="leo.20231124215013.1"><vh>C 程式執行</vh></v>
<v t="leo.20231124215345.1"><vh>Replit 平台</vh></v>
<v t="leo.20231124221000.1"><vh>s.cycu.org 伺服器</vh></v>
<v t="leo.20231124221544.1"><vh>Windows 11</vh></v>
<v t="leo.20231124222442.1"><vh>for 重複迴圈1</vh></v>
<v t="leo.20231124222728.1"><vh>for 重複迴圈2</vh></v>
</v>
<v t="leo.20231124223510.1"><vh>C 的 gd 繪圖</vh>
<v t="leo.20231124223557.1"><vh>C 的 gd 繪圖程式1</vh></v>
<v t="leo.20231125101754.1"><vh>C 的 gd 繪圖程式2</vh></v>
<v t="leo.20231125103147.1"><vh>C 的 gd 繪圖程式3</vh></v>
</v>
<v t="leo.20231125113243.1"><vh>不同平台的 gd 繪圖</vh>
<v t="leo.20231125113334.1"><vh>Replit 的 gd 繪圖</vh></v>
<v t="leo.20231125113402.1"><vh>s.cycu.org 的 gd 繪圖</vh></v>
<v t="leo.20231125113421.1"><vh>Windows 的 gd 繪圖</vh></v>
</v>
<v t="leo.20231125113019.1"><vh>C 的數值分析</vh>
<v t="leo.20231125113135.1"><vh>C 的數值分析1</vh></v>
<v t="leo.20231125151049.1"><vh>Replit 的 gnuplot 繪圖</vh></v>
<v t="leo.20231125160332.1"><vh>s.cycu.org 的 gnuplot 繪圖</vh></v>
</v>
<v t="leo.20231125162002.1"><vh>維護倉儲內容</vh>
<v t="leo.20231125162033.1"><vh>Replit 上維護倉儲內容</vh></v>
<v t="leo.20231125162106.1"><vh>s.cycu.org 上維護倉儲內容</vh></v>
<v t="leo.20231125162149.1"><vh>Windows 上維護倉儲內容</vh></v>
</v>
<v t="leo.20220314205802.8"><vh>slide 2</vh></v>
<v t="leo.20220314205802.9"><vh>slide3</vh>
<v t="leo.20220314205802.10"><vh>slide 3-1</vh></v>
<v t="leo.20220314205802.11"><vh>slide 3-2</vh></v>
<v t="leo.20220314205802.12"><vh>slide 3-3</vh></v>
</v>
<v t="leo.20220314205802.13"><vh>slide 4</vh></v>
<v t="leo.20220314205802.14"><vh>slide 5 </vh></v>
<v t="leo.20220314205802.15"><vh>slide 6</vh></v>
<v t="leo.20220314205802.16"><vh>slide 7 </vh></v>
<v t="leo.20220314205802.17"><vh>slide 8</vh></v>
<v t="leo.20220314205802.18"><vh>slide 9</vh></v>
<v t="leo.20220314205802.19"><vh>slide 10</vh></v>
<v t="leo.20220314205802.20"><vh>slide 11</vh></v>
<v t="leo.20220314205802.21"><vh>slide 12</vh></v>
<v t="leo.20220314205802.22"><vh>slide 13</vh>
<v t="leo.20220314205802.23"><vh>slide 13-1</vh></v>
<v t="leo.20220314205802.24"><vh>slide 13-2</vh></v>
</v>
<v t="leo.20220314205802.25"><vh>slide 14</vh></v>
<v t="leo.20220314205802.26"><vh>slide 15</vh></v>
<v t="leo.20220314205802.27"><vh>slide 16</vh>
<v t="leo.20220314205802.28"><vh>slide 16-1</vh></v>
<v t="leo.20220314205802.29"><vh>slide 16-2</vh></v>
<v t="leo.20220314205802.30"><vh>slide 16-3</vh></v>
<v t="leo.20220314205802.31"><vh>slide 16-4</vh></v>
<v t="leo.20220314205802.32"><vh>slide 16-5</vh></v>
</v>
<v t="leo.20220314205802.33"><vh>slide 17</vh></v>
<v t="leo.20220314205802.34"><vh>slide 18</vh></v>
<v t="leo.20220314205802.35"><vh>slide 19</vh></v>
<v t="leo.20220314205802.36"><vh>slide 20</vh></v>
<v t="leo.20220314205802.37"><vh>slide 21</vh></v>
<v t="leo.20220314205802.38"><vh>slide 22</vh></v>
<v t="leo.20220314205802.39"><vh>slide 23</vh></v>
<v t="leo.20220314205802.40"><vh>slide 24</vh></v>
<v t="leo.20220314205802.41"><vh>slide 25</vh></v>
<v t="leo.20220314205802.42"><vh>slide 26</vh></v>
<v t="leo.20220314205802.43"><vh>slide 27</vh></v>
<v t="leo.20220314205802.44"><vh>slide 28</vh></v>
<v t="leo.20220314205802.45"><vh>slide 29</vh></v>
<v t="leo.20220314205802.46"><vh>slide 30</vh></v>
<v t="leo.20220314205802.47"><vh>slide 31</vh></v>
</v>
</v>
</v>
</v>
</v>
<v t="leo.20231124104449.1"><vh>@clean index_template.html</vh>
<v t="leo.20231124104449.2"><vh>html</vh>
<v t="leo.20231124104449.3"><vh>head</vh></v>
<v t="leo.20231124104449.4"><vh>body</vh>
<v t="leo.20231124104449.5"><vh>reveal div</vh>
<v t="leo.20231124104449.6"><vh>slides div</vh>
<v t="leo.20231124104449.7"><vh>slide 1</vh></v>
<v t="leo.20231124104449.8"><vh>slide 2</vh></v>
<v t="leo.20231124104449.9"><vh>slide3</vh>
<v t="leo.20231124104449.10"><vh>slide 3-1</vh></v>
<v t="leo.20231124104449.11"><vh>slide 3-2</vh></v>
<v t="leo.20231124104449.12"><vh>slide 3-3</vh></v>
</v>
<v t="leo.20231124104449.13"><vh>slide 4</vh></v>
<v t="leo.20231124104449.14"><vh>slide 5 </vh></v>
<v t="leo.20231124104449.15"><vh>slide 6</vh></v>
<v t="leo.20231124104449.16"><vh>slide 7 </vh></v>
<v t="leo.20231124104449.17"><vh>slide 8</vh></v>
<v t="leo.20231124104449.18"><vh>slide 9</vh></v>
<v t="leo.20231124104449.19"><vh>slide 10</vh></v>
<v t="leo.20231124104449.20"><vh>slide 11</vh></v>
<v t="leo.20231124104449.21"><vh>slide 12</vh></v>
<v t="leo.20231124104449.22"><vh>slide 13</vh>
<v t="leo.20231124104449.23"><vh>slide 13-1</vh></v>
<v t="leo.20231124104449.24"><vh>slide 13-2</vh></v>
</v>
<v t="leo.20231124104449.25"><vh>slide 14</vh></v>
<v t="leo.20231124104449.26"><vh>slide 15</vh></v>
<v t="leo.20231124104449.27"><vh>slide 16</vh>
<v t="leo.20231124104449.28"><vh>slide 16-1</vh></v>
<v t="leo.20231124104449.29"><vh>slide 16-2</vh></v>
<v t="leo.20231124104449.30"><vh>slide 16-3</vh></v>
<v t="leo.20231124104449.31"><vh>slide 16-4</vh></v>
<v t="leo.20231124104449.32"><vh>slide 16-5</vh></v>
</v>
<v t="leo.20231124104449.33"><vh>slide 17</vh></v>
<v t="leo.20231124104449.34"><vh>slide 18</vh></v>
<v t="leo.20231124104449.35"><vh>slide 19</vh></v>
<v t="leo.20231124104449.36"><vh>slide 20</vh></v>
<v t="leo.20231124104449.37"><vh>slide 21</vh></v>
<v t="leo.20231124104449.38"><vh>slide 22</vh></v>
<v t="leo.20231124104449.39"><vh>slide 23</vh></v>
<v t="leo.20231124104449.40"><vh>slide 24</vh></v>
<v t="leo.20231124104449.41"><vh>slide 25</vh></v>
<v t="leo.20231124104449.42"><vh>slide 26</vh></v>
<v t="leo.20231124104449.43"><vh>slide 27</vh></v>
<v t="leo.20231124104449.44"><vh>slide 28</vh></v>
<v t="leo.20231124104449.45"><vh>slide 29</vh></v>
<v t="leo.20231124104449.46"><vh>slide 30</vh></v>
<v t="leo.20231124104449.47"><vh>slide 31</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="leo.20180902120523.1"></t>
<t tx="leo.20180902120523.2"></t>
<t tx="leo.20180902120538.1"></t>
<t tx="leo.20180902120538.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="leo.20180902120538.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="leo.20220314205802.1">@language xml
@tabwidth -4
@others</t>
<t tx="leo.20220314205802.10">&lt;section&gt;
    &lt;h2&gt;Vertical Slides&lt;/h2&gt;
    &lt;p&gt;Slides can be nested inside of each other.&lt;/p&gt;
    &lt;p&gt;Use the &lt;em&gt;Space&lt;/em&gt; key to navigate through all slides.&lt;/p&gt;
    &lt;br&gt;
    &lt;a href="#" class="navigate-down"&gt;
        &lt;img class="r-frame" style="background: rgba(255,255,255,0.1);" width="178" height="238" data-src="https://static.slid.es/reveal/arrow.png" alt="Down arrow"&gt;
    &lt;/a&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.11">&lt;section&gt;
    &lt;h2&gt;Basement Level 1&lt;/h2&gt;
    &lt;p&gt;Nested slides are useful for adding additional detail underneath a high level horizontal slide.&lt;/p&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.12">&lt;section&gt;
    &lt;h2&gt;Basement Level 2&lt;/h2&gt;
    &lt;p&gt;That's it, time to go back up.&lt;/p&gt;
    &lt;br&gt;
    &lt;a href="#/2"&gt;
        &lt;img class="r-frame" style="background: rgba(255,255,255,0.1); transform: rotate(180deg);" width="178" height="238" data-src="https://static.slid.es/reveal/arrow.png" alt="Up arrow"&gt;
    &lt;/a&gt;
&lt;/section&gt;</t>
<t tx="leo.20220314205802.13">&lt;section&gt;
    &lt;h2&gt;Slides&lt;/h2&gt;
    &lt;p&gt;
        Not a coder? Not a problem. There's a fully-featured visual editor for authoring these, try it out at &lt;a href="https://slides.com" target="_blank"&gt;https://slides.com&lt;/a&gt;.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.14">&lt;section data-auto-animate&gt;
    &lt;h2 data-id="code-title"&gt;Pretty Code&lt;/h2&gt;
    &lt;pre data-id="code-animation"&gt;&lt;code class="hljs" data-trim data-line-numbers&gt;
        import React, { useState } from 'react';

        function Example() {
          const [count, setCount] = useState(0);

          return (
            ...
          );
        }
    &lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;Code syntax highlighting courtesy of &lt;a href="https://highlightjs.org/usage/"&gt;highlight.js&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.15">&lt;section data-auto-animate&gt;
    &lt;h2 data-id="code-title"&gt;With animations&lt;/h2&gt;
    &lt;pre data-id="code-animation"&gt;&lt;code class="hljs" data-trim data-line-numbers="|4,8-11|17|22-24"&gt;
        import React, { useState } from 'react';

        function Example() {
          const [count, setCount] = useState(0);

          return (
            &amp;lt;div&amp;gt;
              &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;
              &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;
                Click me
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          );
        }

        function SecondExample() {
          const [count, setCount] = useState(0);

          return (
            &amp;lt;div&amp;gt;
              &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;
              &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;
                Click me
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          );
        }
    &lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.16">&lt;section&gt;
    &lt;h2&gt;Point of View&lt;/h2&gt;
    &lt;p&gt;
        Press &lt;strong&gt;ESC&lt;/strong&gt; to enter the slide overview.
    &lt;/p&gt;
    &lt;p&gt;
        Hold down the &lt;strong&gt;alt&lt;/strong&gt; key (&lt;strong&gt;ctrl&lt;/strong&gt; in Linux) and click on any element to zoom towards it using &lt;a href="http://lab.hakim.se/zoom-js"&gt;zoom.js&lt;/a&gt;. Click again to zoom back out.
    &lt;/p&gt;
    &lt;p&gt;
        (NOTE: Use ctrl + click in Linux.)
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.17">&lt;section data-auto-animate data-auto-animate-easing="cubic-bezier(0.770, 0.000, 0.175, 1.000)"&gt;
    &lt;h2&gt;Auto-Animate&lt;/h2&gt;
    &lt;p&gt;Automatically animate matching elements across slides with &lt;a href="https://revealjs.com/auto-animate/"&gt;Auto-Animate&lt;/a&gt;.&lt;/p&gt;
    &lt;div class="r-hstack justify-center"&gt;
        &lt;div data-id="box1" style="background: #999; width: 50px; height: 50px; margin: 10px; border-radius: 5px;"&gt;&lt;/div&gt;
        &lt;div data-id="box2" style="background: #999; width: 50px; height: 50px; margin: 10px; border-radius: 5px;"&gt;&lt;/div&gt;
        &lt;div data-id="box3" style="background: #999; width: 50px; height: 50px; margin: 10px; border-radius: 5px;"&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.18">&lt;section data-auto-animate data-auto-animate-easing="cubic-bezier(0.770, 0.000, 0.175, 1.000)"&gt;
    &lt;div class="r-hstack justify-center"&gt;
        &lt;div data-id="box1" data-auto-animate-delay="0" style="background: cyan; width: 150px; height: 100px; margin: 10px;"&gt;&lt;/div&gt;
        &lt;div data-id="box2" data-auto-animate-delay="0.1" style="background: magenta; width: 150px; height: 100px; margin: 10px;"&gt;&lt;/div&gt;
        &lt;div data-id="box3" data-auto-animate-delay="0.2" style="background: yellow; width: 150px; height: 100px; margin: 10px;"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;h2 style="margin-top: 20px;"&gt;Auto-Animate&lt;/h2&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.19">&lt;section data-auto-animate data-auto-animate-easing="cubic-bezier(0.770, 0.000, 0.175, 1.000)"&gt;
    &lt;div class="r-stack"&gt;
        &lt;div data-id="box1" style="background: cyan; width: 300px; height: 300px; border-radius: 200px;"&gt;&lt;/div&gt;
        &lt;div data-id="box2" style="background: magenta; width: 200px; height: 200px; border-radius: 200px;"&gt;&lt;/div&gt;
        &lt;div data-id="box3" style="background: yellow; width: 100px; height: 100px; border-radius: 200px;"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;h2 style="margin-top: 20px;"&gt;Auto-Animate&lt;/h2&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.2">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;</t>
<t tx="leo.20220314205802.20">&lt;section&gt;
    &lt;h2&gt;Touch Optimized&lt;/h2&gt;
    &lt;p&gt;
        Presentations look great on touch devices, like mobile phones and tablets. Simply swipe through your slides.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.21">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
        ## Markdown support

        Write content using inline or external Markdown.
        Instructions and more info available in the [readme](https://revealjs.com/markdown/).

        ```[]
        &lt;section data-markdown&gt;
          ## Markdown support

          Write content using inline or external Markdown.
          Instructions and more info available in the [readme](https://revealjs.com/markdown/).
        &lt;/section&gt;
        ```
    &lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.22">&lt;section&gt;
     @others
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.23">&lt;section id="fragments"&gt;
    &lt;h2&gt;Fragments&lt;/h2&gt;
    &lt;p&gt;Hit the next arrow...&lt;/p&gt;
    &lt;p class="fragment"&gt;... to step through ...&lt;/p&gt;
    &lt;p&gt;&lt;span class="fragment"&gt;... a&lt;/span&gt; &lt;span class="fragment"&gt;fragmented&lt;/span&gt; &lt;span class="fragment"&gt;slide.&lt;/span&gt;&lt;/p&gt;

    &lt;aside class="notes"&gt;
        This slide has fragments which are also stepped through in the notes window.
    &lt;/aside&gt;
&lt;/section&gt;
 </t>
<t tx="leo.20220314205802.24">&lt;section&gt;
    &lt;h2&gt;Fragment Styles&lt;/h2&gt;
    &lt;p&gt;There's different types of fragments, like:&lt;/p&gt;
    &lt;p class="fragment grow"&gt;grow&lt;/p&gt;
    &lt;p class="fragment shrink"&gt;shrink&lt;/p&gt;
    &lt;p class="fragment fade-out"&gt;fade-out&lt;/p&gt;
    &lt;p&gt;
        &lt;span style="display: inline-block;" class="fragment fade-right"&gt;fade-right, &lt;/span&gt;
        &lt;span style="display: inline-block;" class="fragment fade-up"&gt;up, &lt;/span&gt;
        &lt;span style="display: inline-block;" class="fragment fade-down"&gt;down, &lt;/span&gt;
        &lt;span style="display: inline-block;" class="fragment fade-left"&gt;left&lt;/span&gt;
    &lt;/p&gt;
    &lt;p class="fragment fade-in-then-out"&gt;fade-in-then-out&lt;/p&gt;
    &lt;p class="fragment fade-in-then-semi-out"&gt;fade-in-then-semi-out&lt;/p&gt;
    &lt;p&gt;Highlight &lt;span class="fragment highlight-red"&gt;red&lt;/span&gt; &lt;span class="fragment highlight-blue"&gt;blue&lt;/span&gt; &lt;span class="fragment highlight-green"&gt;green&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="leo.20220314205802.25">&lt;section id="transitions"&gt;
    &lt;h2&gt;Transition Styles&lt;/h2&gt;
    &lt;p&gt;
        You can select from different transitions, like: &lt;br&gt;
        &lt;a href="?transition=none#/transitions"&gt;None&lt;/a&gt; -
        &lt;a href="?transition=fade#/transitions"&gt;Fade&lt;/a&gt; -
        &lt;a href="?transition=slide#/transitions"&gt;Slide&lt;/a&gt; -
        &lt;a href="?transition=convex#/transitions"&gt;Convex&lt;/a&gt; -
        &lt;a href="?transition=concave#/transitions"&gt;Concave&lt;/a&gt; -
        &lt;a href="?transition=zoom#/transitions"&gt;Zoom&lt;/a&gt;
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.26">&lt;section id="themes"&gt;
    &lt;h2&gt;Themes&lt;/h2&gt;
    &lt;p&gt;
        reveal.js comes with a few themes built in: &lt;br&gt;
        &lt;!-- Hacks to swap themes after the page has loaded. Not flexible and only intended for the reveal.js demo deck. --&gt;
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/black.css'); return false;"&gt;Black (default)&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/white.css'); return false;"&gt;White&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/league.css'); return false;"&gt;League&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/sky.css'); return false;"&gt;Sky&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/beige.css'); return false;"&gt;Beige&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/simple.css'); return false;"&gt;Simple&lt;/a&gt; &lt;br&gt;
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/serif.css'); return false;"&gt;Serif&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/blood.css'); return false;"&gt;Blood&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/night.css'); return false;"&gt;Night&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/moon.css'); return false;"&gt;Moon&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/solarized.css'); return false;"&gt;Solarized&lt;/a&gt;
    &lt;/p&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.27">&lt;section&gt;
    @others
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.28">&lt;section data-background="#dddddd"&gt;
    &lt;h2&gt;Slide Backgrounds&lt;/h2&gt;
    &lt;p&gt;
        Set &lt;code&gt;data-background="#dddddd"&lt;/code&gt; on a slide to change the background color. All CSS color formats are supported.
    &lt;/p&gt;
    &lt;a href="#" class="navigate-down"&gt;
        &lt;img class="r-frame" style="background: rgba(255,255,255,0.1);" width="178" height="238" data-src="https://static.slid.es/reveal/arrow.png" alt="Down arrow"&gt;
    &lt;/a&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.29">&lt;section data-background="https://static.slid.es/reveal/image-placeholder.png"&gt;
    &lt;h2&gt;Image Backgrounds&lt;/h2&gt;
    &lt;pre&gt;&lt;code class="hljs html"&gt;&amp;lt;section data-background="image.png"&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.3">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;

    &lt;title&gt;reveal.js – The HTML Presentation Framework&lt;/title&gt;

    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;

    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;

    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;

    &lt;link rel="stylesheet" href="dist/reset.css"&gt;
    &lt;link rel="stylesheet" href="dist/reveal.css"&gt;
    &lt;link rel="stylesheet" href="dist/theme/black.css" id="theme"&gt;

    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="plugin/highlight/monokai.css" id="highlight-theme"&gt;
&lt;/head&gt;</t>
<t tx="leo.20220314205802.30">&lt;section data-background="https://static.slid.es/reveal/image-placeholder.png" data-background-repeat="repeat" data-background-size="100px"&gt;
    &lt;h2&gt;Tiled Backgrounds&lt;/h2&gt;
    &lt;pre&gt;&lt;code class="hljs html" style="word-wrap: break-word;"&gt;&amp;lt;section data-background="image.png" data-background-repeat="repeat" data-background-size="100px"&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.31">&lt;section data-background-video="https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4" data-background-color="#000000"&gt;
    &lt;div style="background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px;"&gt;
        &lt;h2&gt;Video Backgrounds&lt;/h2&gt;
        &lt;pre&gt;&lt;code class="hljs html" style="word-wrap: break-word;"&gt;&amp;lt;section data-background-video="video.mp4,video.webm"&amp;gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.32">&lt;section data-background="http://i.giphy.com/90F8aUepslB84.gif"&gt;
    &lt;h2&gt;... and GIFs!&lt;/h2&gt;
&lt;/section&gt;</t>
<t tx="leo.20220314205802.33">&lt;section data-transition="slide" data-background="#4d7e65" data-background-transition="zoom"&gt;
    &lt;h2&gt;Background Transitions&lt;/h2&gt;
    &lt;p&gt;
        Different background transitions are available via the backgroundTransition option. This one's called "zoom".
    &lt;/p&gt;
    &lt;pre&gt;&lt;code class="hljs javascript"&gt;Reveal.configure({ backgroundTransition: 'zoom' })&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.34">&lt;section data-transition="slide" data-background="#b5533c" data-background-transition="zoom"&gt;
    &lt;h2&gt;Background Transitions&lt;/h2&gt;
    &lt;p&gt;
        You can override background transitions per-slide.
    &lt;/p&gt;
    &lt;pre&gt;&lt;code class="hljs html" style="word-wrap: break-word;"&gt;&amp;lt;section data-background-transition="zoom"&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.35">&lt;section data-background-iframe="https://hakim.se" data-background-interactive&gt;
    &lt;div style="position: absolute; width: 40%; right: 0; box-shadow: 0 1px 4px rgba(0,0,0,0.5), 0 5px 25px rgba(0,0,0,0.2); background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px; font-size: 20px; text-align: left;"&gt;
        &lt;h2&gt;Iframe Backgrounds&lt;/h2&gt;
        &lt;p&gt;Since reveal.js runs on the web, you can easily embed other web content. Try interacting with the page in the background.&lt;/p&gt;
    &lt;/div&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.36">&lt;section&gt;
    &lt;h2&gt;Marvelous List&lt;/h2&gt;
    &lt;ul&gt;
        &lt;li&gt;No order here&lt;/li&gt;
        &lt;li&gt;Or here&lt;/li&gt;
        &lt;li&gt;Or here&lt;/li&gt;
        &lt;li&gt;Or here&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.37">&lt;section&gt;
    &lt;h2&gt;Fantastic Ordered List&lt;/h2&gt;
    &lt;ol&gt;
        &lt;li&gt;One is smaller than...&lt;/li&gt;
        &lt;li&gt;Two is smaller than...&lt;/li&gt;
        &lt;li&gt;Three!&lt;/li&gt;
    &lt;/ol&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.38">&lt;section&gt;
    &lt;h2&gt;Tabular Tables&lt;/h2&gt;
    &lt;table&gt;
        &lt;thead&gt;
            &lt;tr&gt;
                &lt;th&gt;Item&lt;/th&gt;
                &lt;th&gt;Value&lt;/th&gt;
                &lt;th&gt;Quantity&lt;/th&gt;
            &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
            &lt;tr&gt;
                &lt;td&gt;Apples&lt;/td&gt;
                &lt;td&gt;$1&lt;/td&gt;
                &lt;td&gt;7&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;Lemonade&lt;/td&gt;
                &lt;td&gt;$2&lt;/td&gt;
                &lt;td&gt;18&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;Bread&lt;/td&gt;
                &lt;td&gt;$3&lt;/td&gt;
                &lt;td&gt;2&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.39">&lt;section&gt;
    &lt;h2&gt;Clever Quotes&lt;/h2&gt;
    &lt;p&gt;
        These guys come in two forms, inline: &lt;q cite="http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations"&gt;The nice thing about standards is that there are so many to choose from&lt;/q&gt; and block:
    &lt;/p&gt;
    &lt;blockquote cite="http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations"&gt;
        &amp;ldquo;For years there has been a theory that millions of monkeys typing at random on millions of typewriters would
        reproduce the entire works of Shakespeare. The Internet has proven this theory to be untrue.&amp;rdquo;
    &lt;/blockquote&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.4">&lt;body&gt;
@others
    &lt;script src="dist/reveal.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/zoom/zoom.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/notes/notes.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/search/search.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/markdown/markdown.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/highlight/highlight.js"&gt;&lt;/script&gt;
    &lt;script&gt;

        // Also available as an ES module, see:
        // https://revealjs.com/initialization/
        Reveal.initialize({
            controls: true,
            progress: true,
            center: true,
            hash: true,

            // Learn about plugins: https://revealjs.com/plugins/
            plugins: [ RevealZoom, RevealNotes, RevealSearch, RevealMarkdown, RevealHighlight ]
        });

    &lt;/script&gt;
&lt;/body&gt;</t>
<t tx="leo.20220314205802.40">&lt;section&gt;
    &lt;h2&gt;Intergalactic Interconnections&lt;/h2&gt;
    &lt;p&gt;
        You can link between slides internally,
        &lt;a href="#/2/3"&gt;like this&lt;/a&gt;.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.41">&lt;section&gt;
    &lt;h2&gt;Speaker View&lt;/h2&gt;
    &lt;p&gt;There's a &lt;a href="https://revealjs.com/speaker-view/"&gt;speaker view&lt;/a&gt;. It includes a timer, preview of the upcoming slide as well as your speaker notes.&lt;/p&gt;
    &lt;p&gt;Press the &lt;em&gt;S&lt;/em&gt; key to try it out.&lt;/p&gt;

    &lt;aside class="notes"&gt;
        Oh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit 's' on your keyboard).
    &lt;/aside&gt;
&lt;/section&gt;
</t>
<t tx="leo.20220314205802.42">&lt;section&gt;
    &lt;h2&gt;Export to PDF&lt;/h2&gt;
    &lt;p&gt;Presentations can be &lt;a href="https://revealjs.com/pdf-export/"&gt;exported to PDF&lt;/a&gt;, here's an example:&lt;/p&gt;
    &lt;iframe data-src="https://www.slideshare.net/slideshow/embed_code/42840540" width="445" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:3px solid #666; margin-bottom:5px; max-width: 100%;" allowfullscreen&gt; &lt;/iframe&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.43">&lt;section&gt;
    &lt;h2&gt;Global State&lt;/h2&gt;
    &lt;p&gt;
        Set &lt;code&gt;data-state="something"&lt;/code&gt; on a slide and &lt;code&gt;"something"&lt;/code&gt;
        will be added as a class to the document element when the slide is open. This lets you
        apply broader style changes, like switching the page background.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.44">&lt;section data-state="customevent"&gt;
    &lt;h2&gt;State Events&lt;/h2&gt;
    &lt;p&gt;
        Additionally custom events can be triggered on a per slide basis by binding to the &lt;code&gt;data-state&lt;/code&gt; name.
    &lt;/p&gt;
    &lt;pre&gt;&lt;code class="javascript" data-trim contenteditable style="font-size: 18px;"&gt;
Reveal.on( 'customevent', function() {
console.log( '"customevent" has fired' );
} );
    &lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.45">&lt;section&gt;
    &lt;h2&gt;Take a Moment&lt;/h2&gt;
    &lt;p&gt;
        Press B or . on your keyboard to pause the presentation. This is helpful when you're on stage and want to take distracting slides off the screen.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.46">&lt;section&gt;
    &lt;h2&gt;Much more&lt;/h2&gt;
    &lt;ul&gt;
        &lt;li&gt;Right-to-left support&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://revealjs.com/api/"&gt;Extensive JavaScript API&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://revealjs.com/auto-slide/"&gt;Auto-progression&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://revealjs.com/backgrounds/#parallax-background"&gt;Parallax backgrounds&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://revealjs.com/keyboard/"&gt;Custom keyboard bindings&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.47">&lt;section style="text-align: left;"&gt;
    &lt;h1&gt;THE END&lt;/h1&gt;
    &lt;p&gt;
        - &lt;a href="https://slides.com"&gt;Try the online editor&lt;/a&gt; &lt;br&gt;
        - &lt;a href="https://github.com/hakimel/reveal.js"&gt;Source code &amp;amp; documentation&lt;/a&gt;
    &lt;/p&gt;
&lt;/section&gt;</t>
<t tx="leo.20220314205802.5">&lt;div class="reveal"&gt;
    @others
&lt;/div&gt;</t>
<t tx="leo.20220314205802.6">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;</t>
<t tx="leo.20220314205802.7">&lt;section&gt;
    &lt;a href="https://revealjs.com"&gt;
        &lt;img src="./../images/kmol_1172x340_color_3yrs.png" alt="kmolab logo" style="height: 180px; margin: 0 auto 4rem auto; background: transparent;" class="kmolab-logo"&gt;
    &lt;/a&gt;
    &lt;h3&gt;計算機程式&lt;/h3&gt;
    &lt;p&gt;
        &lt;small&gt;Created by &lt;a href="http://mde.tw"&gt;KMOLAB&lt;/a&gt;&lt;/small&gt;
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.8">&lt;section&gt;
    &lt;h2&gt;Hello There&lt;/h2&gt;
    &lt;p&gt;
        reveal.js enables you to create beautiful interactive slide decks using HTML. This presentation will show you examples of what it can do.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20220314205802.9">&lt;!-- Example of nested vertical slides --&gt;
&lt;section&gt;
    @others
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.1">@language xml
@tabwidth -4
@others</t>
<t tx="leo.20231124104449.10">&lt;section&gt;
    &lt;h2&gt;Vertical Slides&lt;/h2&gt;
    &lt;p&gt;Slides can be nested inside of each other.&lt;/p&gt;
    &lt;p&gt;Use the &lt;em&gt;Space&lt;/em&gt; key to navigate through all slides.&lt;/p&gt;
    &lt;br&gt;
    &lt;a href="#" class="navigate-down"&gt;
        &lt;img class="r-frame" style="background: rgba(255,255,255,0.1);" width="178" height="238" data-src="https://static.slid.es/reveal/arrow.png" alt="Down arrow"&gt;
    &lt;/a&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.11">&lt;section&gt;
    &lt;h2&gt;Basement Level 1&lt;/h2&gt;
    &lt;p&gt;Nested slides are useful for adding additional detail underneath a high level horizontal slide.&lt;/p&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.12">&lt;section&gt;
    &lt;h2&gt;Basement Level 2&lt;/h2&gt;
    &lt;p&gt;That's it, time to go back up.&lt;/p&gt;
    &lt;br&gt;
    &lt;a href="#/2"&gt;
        &lt;img class="r-frame" style="background: rgba(255,255,255,0.1); transform: rotate(180deg);" width="178" height="238" data-src="https://static.slid.es/reveal/arrow.png" alt="Up arrow"&gt;
    &lt;/a&gt;
&lt;/section&gt;</t>
<t tx="leo.20231124104449.13">&lt;section&gt;
    &lt;h2&gt;Slides&lt;/h2&gt;
    &lt;p&gt;
        Not a coder? Not a problem. There's a fully-featured visual editor for authoring these, try it out at &lt;a href="https://slides.com" target="_blank"&gt;https://slides.com&lt;/a&gt;.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.14">&lt;section data-auto-animate&gt;
    &lt;h2 data-id="code-title"&gt;Pretty Code&lt;/h2&gt;
    &lt;pre data-id="code-animation"&gt;&lt;code class="hljs" data-trim data-line-numbers&gt;
        import React, { useState } from 'react';

        function Example() {
          const [count, setCount] = useState(0);

          return (
            ...
          );
        }
    &lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;Code syntax highlighting courtesy of &lt;a href="https://highlightjs.org/usage/"&gt;highlight.js&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.15">&lt;section data-auto-animate&gt;
    &lt;h2 data-id="code-title"&gt;With animations&lt;/h2&gt;
    &lt;pre data-id="code-animation"&gt;&lt;code class="hljs" data-trim data-line-numbers="|4,8-11|17|22-24"&gt;
        import React, { useState } from 'react';

        function Example() {
          const [count, setCount] = useState(0);

          return (
            &amp;lt;div&amp;gt;
              &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;
              &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;
                Click me
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          );
        }

        function SecondExample() {
          const [count, setCount] = useState(0);

          return (
            &amp;lt;div&amp;gt;
              &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;
              &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;
                Click me
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          );
        }
    &lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.16">&lt;section&gt;
    &lt;h2&gt;Point of View&lt;/h2&gt;
    &lt;p&gt;
        Press &lt;strong&gt;ESC&lt;/strong&gt; to enter the slide overview.
    &lt;/p&gt;
    &lt;p&gt;
        Hold down the &lt;strong&gt;alt&lt;/strong&gt; key (&lt;strong&gt;ctrl&lt;/strong&gt; in Linux) and click on any element to zoom towards it using &lt;a href="http://lab.hakim.se/zoom-js"&gt;zoom.js&lt;/a&gt;. Click again to zoom back out.
    &lt;/p&gt;
    &lt;p&gt;
        (NOTE: Use ctrl + click in Linux.)
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.17">&lt;section data-auto-animate data-auto-animate-easing="cubic-bezier(0.770, 0.000, 0.175, 1.000)"&gt;
    &lt;h2&gt;Auto-Animate&lt;/h2&gt;
    &lt;p&gt;Automatically animate matching elements across slides with &lt;a href="https://revealjs.com/auto-animate/"&gt;Auto-Animate&lt;/a&gt;.&lt;/p&gt;
    &lt;div class="r-hstack justify-center"&gt;
        &lt;div data-id="box1" style="background: #999; width: 50px; height: 50px; margin: 10px; border-radius: 5px;"&gt;&lt;/div&gt;
        &lt;div data-id="box2" style="background: #999; width: 50px; height: 50px; margin: 10px; border-radius: 5px;"&gt;&lt;/div&gt;
        &lt;div data-id="box3" style="background: #999; width: 50px; height: 50px; margin: 10px; border-radius: 5px;"&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.18">&lt;section data-auto-animate data-auto-animate-easing="cubic-bezier(0.770, 0.000, 0.175, 1.000)"&gt;
    &lt;div class="r-hstack justify-center"&gt;
        &lt;div data-id="box1" data-auto-animate-delay="0" style="background: cyan; width: 150px; height: 100px; margin: 10px;"&gt;&lt;/div&gt;
        &lt;div data-id="box2" data-auto-animate-delay="0.1" style="background: magenta; width: 150px; height: 100px; margin: 10px;"&gt;&lt;/div&gt;
        &lt;div data-id="box3" data-auto-animate-delay="0.2" style="background: yellow; width: 150px; height: 100px; margin: 10px;"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;h2 style="margin-top: 20px;"&gt;Auto-Animate&lt;/h2&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.19">&lt;section data-auto-animate data-auto-animate-easing="cubic-bezier(0.770, 0.000, 0.175, 1.000)"&gt;
    &lt;div class="r-stack"&gt;
        &lt;div data-id="box1" style="background: cyan; width: 300px; height: 300px; border-radius: 200px;"&gt;&lt;/div&gt;
        &lt;div data-id="box2" style="background: magenta; width: 200px; height: 200px; border-radius: 200px;"&gt;&lt;/div&gt;
        &lt;div data-id="box3" style="background: yellow; width: 100px; height: 100px; border-radius: 200px;"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;h2 style="margin-top: 20px;"&gt;Auto-Animate&lt;/h2&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.2">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;</t>
<t tx="leo.20231124104449.20">&lt;section&gt;
    &lt;h2&gt;Touch Optimized&lt;/h2&gt;
    &lt;p&gt;
        Presentations look great on touch devices, like mobile phones and tablets. Simply swipe through your slides.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.21">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
        ## Markdown support

        Write content using inline or external Markdown.
        Instructions and more info available in the [readme](https://revealjs.com/markdown/).

        ```[]
        &lt;section data-markdown&gt;
          ## Markdown support

          Write content using inline or external Markdown.
          Instructions and more info available in the [readme](https://revealjs.com/markdown/).
        &lt;/section&gt;
        ```
    &lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.22">&lt;section&gt;
     @others
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.23">&lt;section id="fragments"&gt;
    &lt;h2&gt;Fragments&lt;/h2&gt;
    &lt;p&gt;Hit the next arrow...&lt;/p&gt;
    &lt;p class="fragment"&gt;... to step through ...&lt;/p&gt;
    &lt;p&gt;&lt;span class="fragment"&gt;... a&lt;/span&gt; &lt;span class="fragment"&gt;fragmented&lt;/span&gt; &lt;span class="fragment"&gt;slide.&lt;/span&gt;&lt;/p&gt;

    &lt;aside class="notes"&gt;
        This slide has fragments which are also stepped through in the notes window.
    &lt;/aside&gt;
&lt;/section&gt;
 </t>
<t tx="leo.20231124104449.24">&lt;section&gt;
    &lt;h2&gt;Fragment Styles&lt;/h2&gt;
    &lt;p&gt;There's different types of fragments, like:&lt;/p&gt;
    &lt;p class="fragment grow"&gt;grow&lt;/p&gt;
    &lt;p class="fragment shrink"&gt;shrink&lt;/p&gt;
    &lt;p class="fragment fade-out"&gt;fade-out&lt;/p&gt;
    &lt;p&gt;
        &lt;span style="display: inline-block;" class="fragment fade-right"&gt;fade-right, &lt;/span&gt;
        &lt;span style="display: inline-block;" class="fragment fade-up"&gt;up, &lt;/span&gt;
        &lt;span style="display: inline-block;" class="fragment fade-down"&gt;down, &lt;/span&gt;
        &lt;span style="display: inline-block;" class="fragment fade-left"&gt;left&lt;/span&gt;
    &lt;/p&gt;
    &lt;p class="fragment fade-in-then-out"&gt;fade-in-then-out&lt;/p&gt;
    &lt;p class="fragment fade-in-then-semi-out"&gt;fade-in-then-semi-out&lt;/p&gt;
    &lt;p&gt;Highlight &lt;span class="fragment highlight-red"&gt;red&lt;/span&gt; &lt;span class="fragment highlight-blue"&gt;blue&lt;/span&gt; &lt;span class="fragment highlight-green"&gt;green&lt;/span&gt;&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="leo.20231124104449.25">&lt;section id="transitions"&gt;
    &lt;h2&gt;Transition Styles&lt;/h2&gt;
    &lt;p&gt;
        You can select from different transitions, like: &lt;br&gt;
        &lt;a href="?transition=none#/transitions"&gt;None&lt;/a&gt; -
        &lt;a href="?transition=fade#/transitions"&gt;Fade&lt;/a&gt; -
        &lt;a href="?transition=slide#/transitions"&gt;Slide&lt;/a&gt; -
        &lt;a href="?transition=convex#/transitions"&gt;Convex&lt;/a&gt; -
        &lt;a href="?transition=concave#/transitions"&gt;Concave&lt;/a&gt; -
        &lt;a href="?transition=zoom#/transitions"&gt;Zoom&lt;/a&gt;
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.26">&lt;section id="themes"&gt;
    &lt;h2&gt;Themes&lt;/h2&gt;
    &lt;p&gt;
        reveal.js comes with a few themes built in: &lt;br&gt;
        &lt;!-- Hacks to swap themes after the page has loaded. Not flexible and only intended for the reveal.js demo deck. --&gt;
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/black.css'); return false;"&gt;Black (default)&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/white.css'); return false;"&gt;White&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/league.css'); return false;"&gt;League&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/sky.css'); return false;"&gt;Sky&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/beige.css'); return false;"&gt;Beige&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/simple.css'); return false;"&gt;Simple&lt;/a&gt; &lt;br&gt;
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/serif.css'); return false;"&gt;Serif&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/blood.css'); return false;"&gt;Blood&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/night.css'); return false;"&gt;Night&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/moon.css'); return false;"&gt;Moon&lt;/a&gt; -
        &lt;a href="#" onclick="document.getElementById('theme').setAttribute('href','css/theme/solarized.css'); return false;"&gt;Solarized&lt;/a&gt;
    &lt;/p&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.27">&lt;section&gt;
    @others
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.28">&lt;section data-background="#dddddd"&gt;
    &lt;h2&gt;Slide Backgrounds&lt;/h2&gt;
    &lt;p&gt;
        Set &lt;code&gt;data-background="#dddddd"&lt;/code&gt; on a slide to change the background color. All CSS color formats are supported.
    &lt;/p&gt;
    &lt;a href="#" class="navigate-down"&gt;
        &lt;img class="r-frame" style="background: rgba(255,255,255,0.1);" width="178" height="238" data-src="https://static.slid.es/reveal/arrow.png" alt="Down arrow"&gt;
    &lt;/a&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.29">&lt;section data-background="https://static.slid.es/reveal/image-placeholder.png"&gt;
    &lt;h2&gt;Image Backgrounds&lt;/h2&gt;
    &lt;pre&gt;&lt;code class="hljs html"&gt;&amp;lt;section data-background="image.png"&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.3">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;

    &lt;title&gt;reveal.js – The HTML Presentation Framework&lt;/title&gt;

    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;

    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;

    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;

    &lt;link rel="stylesheet" href="dist/reset.css"&gt;
    &lt;link rel="stylesheet" href="dist/reveal.css"&gt;
    &lt;link rel="stylesheet" href="dist/theme/black.css" id="theme"&gt;

    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="plugin/highlight/monokai.css" id="highlight-theme"&gt;
&lt;/head&gt;</t>
<t tx="leo.20231124104449.30">&lt;section data-background="https://static.slid.es/reveal/image-placeholder.png" data-background-repeat="repeat" data-background-size="100px"&gt;
    &lt;h2&gt;Tiled Backgrounds&lt;/h2&gt;
    &lt;pre&gt;&lt;code class="hljs html" style="word-wrap: break-word;"&gt;&amp;lt;section data-background="image.png" data-background-repeat="repeat" data-background-size="100px"&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.31">&lt;section data-background-video="https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4" data-background-color="#000000"&gt;
    &lt;div style="background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px;"&gt;
        &lt;h2&gt;Video Backgrounds&lt;/h2&gt;
        &lt;pre&gt;&lt;code class="hljs html" style="word-wrap: break-word;"&gt;&amp;lt;section data-background-video="video.mp4,video.webm"&amp;gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.32">&lt;section data-background="http://i.giphy.com/90F8aUepslB84.gif"&gt;
    &lt;h2&gt;... and GIFs!&lt;/h2&gt;
&lt;/section&gt;</t>
<t tx="leo.20231124104449.33">&lt;section data-transition="slide" data-background="#4d7e65" data-background-transition="zoom"&gt;
    &lt;h2&gt;Background Transitions&lt;/h2&gt;
    &lt;p&gt;
        Different background transitions are available via the backgroundTransition option. This one's called "zoom".
    &lt;/p&gt;
    &lt;pre&gt;&lt;code class="hljs javascript"&gt;Reveal.configure({ backgroundTransition: 'zoom' })&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.34">&lt;section data-transition="slide" data-background="#b5533c" data-background-transition="zoom"&gt;
    &lt;h2&gt;Background Transitions&lt;/h2&gt;
    &lt;p&gt;
        You can override background transitions per-slide.
    &lt;/p&gt;
    &lt;pre&gt;&lt;code class="hljs html" style="word-wrap: break-word;"&gt;&amp;lt;section data-background-transition="zoom"&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.35">&lt;section data-background-iframe="https://hakim.se" data-background-interactive&gt;
    &lt;div style="position: absolute; width: 40%; right: 0; box-shadow: 0 1px 4px rgba(0,0,0,0.5), 0 5px 25px rgba(0,0,0,0.2); background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px; font-size: 20px; text-align: left;"&gt;
        &lt;h2&gt;Iframe Backgrounds&lt;/h2&gt;
        &lt;p&gt;Since reveal.js runs on the web, you can easily embed other web content. Try interacting with the page in the background.&lt;/p&gt;
    &lt;/div&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.36">&lt;section&gt;
    &lt;h2&gt;Marvelous List&lt;/h2&gt;
    &lt;ul&gt;
        &lt;li&gt;No order here&lt;/li&gt;
        &lt;li&gt;Or here&lt;/li&gt;
        &lt;li&gt;Or here&lt;/li&gt;
        &lt;li&gt;Or here&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.37">&lt;section&gt;
    &lt;h2&gt;Fantastic Ordered List&lt;/h2&gt;
    &lt;ol&gt;
        &lt;li&gt;One is smaller than...&lt;/li&gt;
        &lt;li&gt;Two is smaller than...&lt;/li&gt;
        &lt;li&gt;Three!&lt;/li&gt;
    &lt;/ol&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.38">&lt;section&gt;
    &lt;h2&gt;Tabular Tables&lt;/h2&gt;
    &lt;table&gt;
        &lt;thead&gt;
            &lt;tr&gt;
                &lt;th&gt;Item&lt;/th&gt;
                &lt;th&gt;Value&lt;/th&gt;
                &lt;th&gt;Quantity&lt;/th&gt;
            &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
            &lt;tr&gt;
                &lt;td&gt;Apples&lt;/td&gt;
                &lt;td&gt;$1&lt;/td&gt;
                &lt;td&gt;7&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;Lemonade&lt;/td&gt;
                &lt;td&gt;$2&lt;/td&gt;
                &lt;td&gt;18&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;Bread&lt;/td&gt;
                &lt;td&gt;$3&lt;/td&gt;
                &lt;td&gt;2&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.39">&lt;section&gt;
    &lt;h2&gt;Clever Quotes&lt;/h2&gt;
    &lt;p&gt;
        These guys come in two forms, inline: &lt;q cite="http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations"&gt;The nice thing about standards is that there are so many to choose from&lt;/q&gt; and block:
    &lt;/p&gt;
    &lt;blockquote cite="http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations"&gt;
        &amp;ldquo;For years there has been a theory that millions of monkeys typing at random on millions of typewriters would
        reproduce the entire works of Shakespeare. The Internet has proven this theory to be untrue.&amp;rdquo;
    &lt;/blockquote&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.4">&lt;body&gt;
@others
    &lt;script src="dist/reveal.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/zoom/zoom.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/notes/notes.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/search/search.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/markdown/markdown.js"&gt;&lt;/script&gt;
    &lt;script src="plugin/highlight/highlight.js"&gt;&lt;/script&gt;
    &lt;script&gt;

        // Also available as an ES module, see:
        // https://revealjs.com/initialization/
        Reveal.initialize({
            controls: true,
            progress: true,
            center: true,
            hash: true,

            // Learn about plugins: https://revealjs.com/plugins/
            plugins: [ RevealZoom, RevealNotes, RevealSearch, RevealMarkdown, RevealHighlight ]
        });

    &lt;/script&gt;
&lt;/body&gt;</t>
<t tx="leo.20231124104449.40">&lt;section&gt;
    &lt;h2&gt;Intergalactic Interconnections&lt;/h2&gt;
    &lt;p&gt;
        You can link between slides internally,
        &lt;a href="#/2/3"&gt;like this&lt;/a&gt;.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.41">&lt;section&gt;
    &lt;h2&gt;Speaker View&lt;/h2&gt;
    &lt;p&gt;There's a &lt;a href="https://revealjs.com/speaker-view/"&gt;speaker view&lt;/a&gt;. It includes a timer, preview of the upcoming slide as well as your speaker notes.&lt;/p&gt;
    &lt;p&gt;Press the &lt;em&gt;S&lt;/em&gt; key to try it out.&lt;/p&gt;

    &lt;aside class="notes"&gt;
        Oh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit 's' on your keyboard).
    &lt;/aside&gt;
&lt;/section&gt;
</t>
<t tx="leo.20231124104449.42">&lt;section&gt;
    &lt;h2&gt;Export to PDF&lt;/h2&gt;
    &lt;p&gt;Presentations can be &lt;a href="https://revealjs.com/pdf-export/"&gt;exported to PDF&lt;/a&gt;, here's an example:&lt;/p&gt;
    &lt;iframe data-src="https://www.slideshare.net/slideshow/embed_code/42840540" width="445" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:3px solid #666; margin-bottom:5px; max-width: 100%;" allowfullscreen&gt; &lt;/iframe&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.43">&lt;section&gt;
    &lt;h2&gt;Global State&lt;/h2&gt;
    &lt;p&gt;
        Set &lt;code&gt;data-state="something"&lt;/code&gt; on a slide and &lt;code&gt;"something"&lt;/code&gt;
        will be added as a class to the document element when the slide is open. This lets you
        apply broader style changes, like switching the page background.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.44">&lt;section data-state="customevent"&gt;
    &lt;h2&gt;State Events&lt;/h2&gt;
    &lt;p&gt;
        Additionally custom events can be triggered on a per slide basis by binding to the &lt;code&gt;data-state&lt;/code&gt; name.
    &lt;/p&gt;
    &lt;pre&gt;&lt;code class="javascript" data-trim contenteditable style="font-size: 18px;"&gt;
Reveal.on( 'customevent', function() {
console.log( '"customevent" has fired' );
} );
    &lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.45">&lt;section&gt;
    &lt;h2&gt;Take a Moment&lt;/h2&gt;
    &lt;p&gt;
        Press B or . on your keyboard to pause the presentation. This is helpful when you're on stage and want to take distracting slides off the screen.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.46">&lt;section&gt;
    &lt;h2&gt;Much more&lt;/h2&gt;
    &lt;ul&gt;
        &lt;li&gt;Right-to-left support&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://revealjs.com/api/"&gt;Extensive JavaScript API&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://revealjs.com/auto-slide/"&gt;Auto-progression&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://revealjs.com/backgrounds/#parallax-background"&gt;Parallax backgrounds&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://revealjs.com/keyboard/"&gt;Custom keyboard bindings&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.47">&lt;section style="text-align: left;"&gt;
    &lt;h1&gt;THE END&lt;/h1&gt;
    &lt;p&gt;
        - &lt;a href="https://slides.com"&gt;Try the online editor&lt;/a&gt; &lt;br&gt;
        - &lt;a href="https://github.com/hakimel/reveal.js"&gt;Source code &amp;amp; documentation&lt;/a&gt;
    &lt;/p&gt;
&lt;/section&gt;</t>
<t tx="leo.20231124104449.5">&lt;div class="reveal"&gt;
    @others
&lt;/div&gt;</t>
<t tx="leo.20231124104449.6">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
    @others
&lt;/div&gt;</t>
<t tx="leo.20231124104449.7">&lt;section&gt;
    &lt;a href="https://revealjs.com"&gt;
        &lt;img src="https://static.slid.es/reveal/logo-v1/reveal-white-text.svg" alt="reveal.js logo" style="height: 180px; margin: 0 auto 4rem auto; background: transparent;" class="demo-logo"&gt;
    &lt;/a&gt;
    &lt;h3&gt;The HTML Presentation Framework&lt;/h3&gt;
    &lt;p&gt;
        &lt;small&gt;Created by &lt;a href="http://hakim.se"&gt;Hakim El Hattab&lt;/a&gt; and &lt;a href="https://github.com/hakimel/reveal.js/graphs/contributors"&gt;contributors&lt;/a&gt;&lt;/small&gt;
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.8">&lt;section&gt;
    &lt;h2&gt;Hello There&lt;/h2&gt;
    &lt;p&gt;
        reveal.js enables you to create beautiful interactive slide decks using HTML. This presentation will show you examples of what it can do.
    &lt;/p&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124104449.9">&lt;!-- Example of nested vertical slides --&gt;
&lt;section&gt;
    @others
&lt;/section&gt;

</t>
<t tx="leo.20231124104819.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## 計算機程式教學內容

- 截至目前 C 在 Replit、s.cycu.org 與個人電腦上的 gd 與 gnuplot 繪圖應用

- [課堂筆記](https://mde.tw/cpnote/)

- 從以下 hello world 列印出發

```[]
#include &lt;stdio.h&gt;

int main()
{
    printf("hello world\n");
}
```
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124111734.1">&lt;section&gt;
    @others
&lt;/section&gt;</t>
<t tx="leo.20231124111828.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## 困難的地方在哪?

- 要先弄清楚電腦的網路設定

- 要在雲端、自架 server 與近端維護 Github 上的倉儲與網站內容

- 許多教材內容都是英文

- 課後要花許多時間自己練習

- &lt;del style="color:red;"&gt;聽說這門課會當很多人&lt;/del&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124112803.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## 有關網路設定

- 以下步驟可以將網路設定檔案放入隨身碟

- 要先從[這裡](https://mde.tw/cpnote/content/links.html)確認你的班級序號

- 下載[網路設定檔案](https://mde.tw/cpnote/downloads/w11_1a.7z)

- 同時下載 SCITE 編輯器: [wscite.7z](https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EayWXm_Hk4ZKsvXqc8iiJ28BeeZNx-4ib5XMjA7WCv6gVg?e=YxEtWS)

- 編輯修改 .ps1 中的 IPv6 固定位址, 放入自己的固定 IPv6 address

- &lt;del style="color:red;"&gt;聽說這門課會當很多人&lt;/del&gt;, &lt;n style="color:green;"&gt;其實只有你當得了你自己!&lt;/n&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124212126.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
- 1_2023_cadlab_network_setup.reg 檔案內容

```[]
Windows Registry Editor Version 5.00

 [HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings]
 ; disable AutoDetect
"AutoDetect"=dword:00000000
"MigrateProxy"=dword:00000001
; enable Proxy
"ProxyEnable"=dword:00000001 
"ProxyHttp1.1"=dword:00000000 
"ProxyServer"="http://[2001:288:6004:17::4]:3128"
"ProxyOverride"="localhost;2001:288:6004:17;192.168.1.0/24;&lt;local&gt;"
```
&lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20231124212507.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
- 1_cadlab_network_setup.bat 檔案內容

- 開機後, 插入隨身碟, 以管理者身分執行 .bat 指令檔案

```[]
REM Get-ExecutionPolicy -List
REM Set-ExecutionPolicy RemoteSigned
echo "disable ipv4 and setup proxy for ipv6"
rem powershell start cmd -v runas
SET CurrentDir=%~dp0
%windir%\system32\reg.exe import %CurrentDir%1_2023_cadlab_network_setup.reg
powershell -noexit -executionpolicy bypass -File %CurrentDir%1_disable_ipv4.ps1
exit
```
&lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20231124212644.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
- 1_disable_ipv4.ps1 檔案內容

```[]
# 關閉 IPv4 網路
Disable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip
  
# 啟用 IPv6 網路
Enable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip6
  
# 設置 IPv6 網路中的 mde DNS 伺服器 (設計系)
$dnsServers = "2001:288:6004:17::3"
Set-DnsClientServerAddress -InterfaceAlias "*" -ServerAddresses $dnsServers


# 設定 IPv6 固定位址 (fixed address), 子網路首碼長度 (subnet prefix) 與網路預設閘道 (gateway) 等三個變數
# 以序號 100 為例
$ipv6Address = "2001:288:6004:17:2023:cba::100"
$subnetPrefixLength = 64
$gateway = "2001:288:6004:17::254"
 
# 參考 https://serverfault.com/questions/427234/getting-network-interface-device-name-in-powershell
$query = "SELECT * FROM Win32_NetworkAdapter WHERE Manufacturer != 'Microsoft' AND NOT PNPDeviceID LIKE 'ROOT\\%'"
$interfaces = Get-WmiObject -Query $query | Sort index
$interfaces | ForEach{
    $friendlyname = $_ | ForEach-Object { $_.NetConnectionID }
    New-NetIPAddress -AddressFamily "IPv6" -InterfaceAlias $friendlyname -IPAddress $ipv6Address -PrefixLength $subnetPrefixLength -DefaultGateway $gateway
}

# 列出所使用的 IPv6 網路通訊協定內容
Write-Host "IPv6 Address: $ipv6Address/$subnetPrefixLength"
Write-Host "IPv6 Gateway: $gateway"
```
&lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20231124215013.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## C 程式執行

- 請分別在 Replit、s.cycu.org 以及 Windows 11 操作系統中執行下列程式

- hello.c 原始碼如下:

```[]
#include &lt;stdio.h&gt;

int main()
{
    printf("hello world\n");
}
```
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124215258.1">&lt;section&gt;
    @others
&lt;/section&gt;</t>
<t tx="leo.20231124215345.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## Replit 上執行 C 程式
&lt;small&gt;

- 登入 Replit 後, 選擇 Python 語言作為 Template, 建立 repl

- 因為系統並未配置 C 程式的編譯器, 首次使用 cc 指令進行編譯時可以加裝

- 自行建立 hello.c 之後, 在 Shell 輸入 cc hello.c, 然後按下 Enter, 系統就會配置 cc

-  再次在 Shell 輸入 cc hello.c 進行編譯連結後, 利用 ./a.out 執行 hello.c 的編譯輸出檔案

- 接下來請連結到 [w10-w11](https://mde.tw/cpnote/content/w10-w11.html)頁面中的項目3, 上述環境已經可以執行不需要額外程式庫的 C 程式

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124221000.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## s.cycu.org 上執行 C 程式
&lt;small&gt;

- 登入 s.cycu.org 之前, 可以在 Windows 11 中建立 hello.c, 然後以 sftp 送到伺服器

- 因為系統已經透過 sudo apt install build-essential 配置 C 程式的編譯器, 因此可以使用 cc 指令進行 c 程式的編譯

- 登入 s.cycu.org 後, 確定所在目錄有 hello.c, 以 cc hello.c 進行編譯連結後, 利用 ./a.out 執行 hello.c 的編譯輸出檔案

- 接下來請連結到 [w10-w11](https://mde.tw/cpnote/content/w10-w11.html)頁面中的項目3, 上述環境已經可以執行不需要額外程式庫的 C 程式

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124221544.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## Win 11 上執行 C 程式
&lt;small&gt;

- 在 Windows 11 中下載 [tinyc.7z](https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EV5P-1cv-y1Ih5zFT9LyTy0B6vGwNfDVlXYescPWAcMliw?e=LTUnq7) (需要下載密碼), 解開後放入隨身碟

- 點擊 start_ipv6.bat 啟動隨身系統, 利用 SciTE 編輯 hello.c

- 在 SciTE 中利用 Tools - Go 執行 hello.c

- 接下來請連結到 [w10-w11](https://mde.tw/cpnote/content/w10-w11.html)頁面中的項目3, 上述環境已經可以執行不需要額外程式庫的 C 程式

- 請下載 [jsliu_c_programming.pdf](https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N) (需要下載密碼), 並分別在 Replit、s.cycu.org 與 Win 11 平台中執行其中的所有範例.

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231124222442.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## C 的 for 重複迴圈

```[]
#include &lt;stdio.h&gt;
 
int main()
{
    for(int i=0; i&lt;10; i++){
        printf("hello world\n");
    }
}
```
&lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20231124222728.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## C 的 for 重複迴圈, 列出變數

```[]
#include &lt;stdio.h&gt;
 
int main()
{
    for(int i=0; i&lt;10; i++){
        printf("第%d次印出 hello world\n", i );
    }
}
```
&lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20231124223510.1">&lt;section&gt;
    @others
&lt;/section&gt;</t>
<t tx="leo.20231124223557.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## C 的 gd 繪圖程式1

&lt;small&gt;

- 請分別在 Replit、s.cycu.org 以及 Windows 11 操作系統中執行下列程式

- [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c) 原始碼如下:

```[]
#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

int main() {
    int width = 800;
    int height = 600;
 
    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);

    FILE *outputFile = fopen("hellogd.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
    
    int red = gdImageColorAllocate(img, 255, 0, 0);
    int blue = gdImageColorAllocate(img, 0, 0, 255);
    int black = gdImageColorAllocate(img, 0, 0, 0);
    int white = gdImageColorAllocate(img, 255, 255, 255);
    // 長方形塗色
    gdImageFilledRectangle(img, 0, 0, width, height, white);
    gdImageFilledRectangle(img, 0, 0, (int)width/4, (int)height/4, blue);
    // 橢圓形塗色
    gdImageFilledEllipse(img, (int)width*3/4, (int)height/4, (int)width/4, (int)width/4, red);
    // 橢圓形畫線
    gdImageEllipse(img, (int)width*3/4, (int)height*3/4, (int)width/4, (int)width/4, red);
    // 畫直線
    gdImageLine(img, (int)width/2, (int)height/2, (int)width/2, (int)height/2 + 100, blue);
    
    // 多邊形畫線
    gdPoint points[4];
    points[0].x = (int)width/4;
    points[0].y = (int)height*3/4;
    points[1].x = points[0].x + 100;
    points[1].y = points[0].y;
    points[2].x = points[1].x;
    points[2].y = points[1].y + 100;
    points[3].x = points[2].x - 100;
    points[3].y = points[2].y;
    gdImagePolygon(img, points, 4, black);
    
    // 多邊形塗色
    gdPoint points2[4];
    points2[0].x = (int)width/3;
    points2[0].y = (int)height/2;
    points2[1].x = points2[0].x + 100;
    points2[1].y = points2[0].y;
    points2[2].x = points2[1].x;
    points2[2].y = points2[1].y + 100;
    points2[3].x = points2[2].x - 150;
    points2[3].y = points2[2].y;
    gdImageFilledPolygon(img, points2, 4, red);

    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
    return 0;
}
```

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125101754.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## C 的 gd 繪圖程式2

&lt;small&gt;

- 從上一頁的繪圖程式 [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c) 可以得到以下結論

- 繪圖程式庫的導入, 是因為 &lt;n style="color:red;"&gt;#include &lt;gd.h&gt;&lt;/n&gt;, 此一 header 檔案定義了許多繪圖的函式

- 數學程式庫的導入, 是因為 &lt;n style="color:red;"&gt;#include &lt;math.h&gt;&lt;/n&gt;, 此一 header 檔案定義了許多數學函式

- C 程式的執行是由 &lt;n style="color:red;"&gt;main()&lt;/n&gt; 主導, 而前面的 int 表示此一主函式執行之後, 會傳回整數型別的資料

- 主函式中要使用變數之前, &lt;n style="color:red;"&gt;一定要宣告其資料型別&lt;/n&gt;, 且每一個可執行的表示式最後, 都要&lt;n style="color:red;"&gt;加上";" 分號&lt;/n&gt;

- [gdImageAlphaBlending](https://libgd.github.io/manuals/2.2.4/files/gd-c.html#gdImageAlphaBlending) 函式中的第二輸入變數為圖層 (layer) [效果](https://libgd.github.io/manuals/2.2.4/files/gd-h.html#Effects)

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125103147.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## C 的 gd 繪圖程式3

&lt;small&gt;

- [gdImagePtr](https://libgd.github.io/manuals/2.2.4/files/gd-h.html#gdImagePtr) 是 gd 繪圖程式庫中的一種資料型別, 定義在 gd.h 中, 其資料型別是設計為 &lt;n style="color:red;"&gt;pointer 指標&lt;/n&gt;

- [gdImageAlphaBlending()](https://libgd.github.io/manuals/2.2.4/files/gd-c.html#gdImageAlphaBlending) 函式中的第二輸入變數為圖層 (layer) [效果](https://libgd.github.io/manuals/2.2.4/files/gd-h.html#Effects)

- 其他與 gd 繪圖程式庫有關的語法, 則可以從 [gd.h](https://libgd.github.io/manuals/2.2.4/files/gd-h.html)、[gd.c](https://libgd.github.io/manuals/2.2.4/files/gd-c.html) 或 [PNG IO](https://libgd.github.io/manuals/2.3.0/files/gd_png-c.html) 查詢, 例如: [gdImageColorAllocate()](https://libgd.github.io/manuals/2.2.4/files/gd-c.html#gdImageColorAllocate)、 [gdImageFilledRectangle()](https://libgd.github.io/manuals/2.2.4/files/gd-c.html#gdImageFilledRectangle)、 [gdImageFilledEllipse()](https://libgd.github.io/manuals/2.2.4/files/gd-c.html#gdImageFilledEllipse)、[gdImageEllipse()](https://libgd.github.io/manuals/2.2.4/files/gd-c.html#gdImageEllipse)、[gdImageLine](https://libgd.github.io/manuals/2.2.4/files/gd-c.html#gdImageLine)、[gdPoint](https://libgd.github.io/manuals/2.2.4/files/gd-h.html#gdPoint)、[gdImageFilledPolygon()](https://libgd.github.io/manuals/2.2.4/files/gd-c.html#gdImageFilledPolygon)、[gdImagePngEx()](https://libgd.github.io/manuals/2.3.0/files/gd_png-c.html#gdImagePngEx) 與 [gdImageDestroy()](https://libgd.github.io/manuals/2.2.4/files/gd-c.html#gdImageDestroy)

- 2017 年發布的 [C 程式語言標準](https://web.archive.org/web/20181230041359if_/http://www.open-std.org/jtc1/sc22/wg14/www/abq/c17_updated_proposed_fdis.pdf), 可以查詢 C 的函式定義, 例如: 查詢 [fopen()](https://pubs.opengroup.org/onlinepubs/9699919799.2008edition/functions/fopen.html) 函式的用法

- 請從 [POSIX.1](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/) (自 1988 年發動的[可攜操作系統介面](https://en.wikipedia.org/wiki/POSIX), 其 Core Services 包含標準 C 程式語法), 查詢 [fprintf()](https://pubs.opengroup.org/onlinepubs/9699919799.2008edition/functions/fprintf.html) 與 [fclose()](https://pubs.opengroup.org/onlinepubs/9699919799.2008edition/functions/fclose.html) 等 C 程式語言內建函式的用法

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125113019.1">&lt;section&gt;
    @others
&lt;/section&gt;</t>
<t tx="leo.20231125113135.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## C 的數值分析1

&lt;small&gt;

- 請分別在 Replit、s.cycu.org 以及 Windows 11 操作系統中執行下列程式

- 以下的 C 程式是透過 [popen()](https://pubs.opengroup.org/onlinepubs/9699919799.2008edition/functions/popen.html) 與外部的 [gnuplot](http://www.gnuplot.info/docs_5.4/Gnuplot_5_4.pdf) 互動式繪圖套件結合, 透過指令執行繪圖

- [hellognuplot.c](https://mde.tw/cpnote/downloads/hellognuplot.c) 原始碼

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125113243.1">&lt;section&gt;
    @others
&lt;/section&gt;</t>
<t tx="leo.20231125113334.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## Replit 的 gd 繪圖

&lt;small&gt;

- 請分別在 [Replit](https://replit.com)、s.cycu.org 以及 Windows 11 操作系統中執行 [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c)

- 先前已知在 [Replit](https://replit.com) 平台上, 無論選擇哪一種程式語言作為 Template, 只要在 Shell 嘗試以 cc 指令編譯 .c 程式, 按下 Enter 虛擬系統就會自行安裝 C compiler

- 但是要能編譯連結 C 與 gd 繪圖程式, 則必須加裝 gd 程式庫, 因此在 replit.nix 中必須加入  [pkgs.gd](https://mde.tw/cpnote/content/index.html?q=pkgs.gd), 其中 pkgs 為 packages 的簡寫, 也就是程式庫套件的意思

- 至於在 Shell 中編譯連結 [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c) 的指令為: &lt;n style="color:red;"&gt;cc hellogd.c -lgd&lt;/n&gt;, 若沒有特別利用 -o 宣告輸出檔案名稱, 則編譯輸出檔案的名稱為 a.out, 可以利用 &lt;n style="color:red;"&gt;./a.out&lt;/n&gt; 執行

- 假如繪圖程式中除了 gd 繪圖程式外, 還用到 math.h 數學程式庫, 則需要利用 &lt;n style="color:red;"&gt;cc hellogd.c -lgd -lm&lt;/n&gt; 進行編譯與連結

- 請根據上列說明, 在 repl 專案中, 修改 &lt;n style="color:red;"&gt;replit.nix&lt;/n&gt; 檔案如下, 看看 [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c) 執行後的結果為何?

```[]
{ pkgs }: {
    deps = [
      pkgs.gd
    ];
}
```

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125113402.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## s.cycu.org 的 gd 繪圖

&lt;small&gt;

- 請分別在 Replit、[s.cycu.org](https://s.cycu.org) 以及 Windows 11 操作系統中執行下列程式

- 由於 [s.cycu.org](https://s.cycu.org) 伺服器已經透過 &lt;n style="color:red;"&gt;sudo apt install build-essential&lt;/n&gt; 安裝 C 程式的編譯器, 而且透過 &lt;n style="color:red;"&gt;sudo apt install libgd-dev&lt;/n&gt; 安裝 gd 程式庫, 因此使用者登入後, 可以直接以 cc  [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c) -lgd 編譯連結後, 再以 ./a.out 執行

- 假如繪圖程式除了使用 gd 程式庫, 還引用數學程式庫 math.h, 則可以利用 cc  [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c) -lgd -lm 編譯連結後, 再以 ./a.out 執行

- 假如 [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c) 程式碼位於倉儲的 downloads 目錄, 且宣告執行後的 gd 繪圖檔案位於倉儲的 images 目錄, 則使用可在 s.cycu.org 主機中開啟編輯網站 (即所謂動態網站) 直接引用 [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c) 與執行後的繪圖檔案.

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125113421.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## Windows 的 gd 繪圖

&lt;small&gt;

- 請分別在 Replit、s.cycu.org 以及 Windows 11 操作系統中執行下列程式

- 在 Windows 11 執行 [hellogd.c](https://mde.tw/cpnote/downloads/hellogd.c), 可以下載 [tinyc.7z](https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EV5P-1cv-y1Ih5zFT9LyTy0B6vGwNfDVlXYescPWAcMliw?e=LTUnq7) (需要下載密碼), 解開後放入隨身碟

- 啟動 tinyc 中的 start_ipv6.bat 後, 必須在 SciTE 編輯器中, 以 Options - cc.properties 帶出 C 程式的編譯與執行設定檔案, 修改 473 行之後的編譯與執行設定, 也就是在 tcc.exe -run 之後, 加入 -lgd, 以確保使用 Tiny C Compiler 編譯連結的過程會導入 gd 繪圖程式庫

- 之後若希望再利用 tcc 編譯執行帶有其他程式庫的程式碼, 可以在 tcc.exe -run -lgd 之後再加入其他程式庫的連結設定

```[]
# Braces are only matched in operator style
braces.cpp.style=10

ccopts=-pedantic -Os
#cc=g++ $(ccopts) -c $(FileNameExt) -o $(FileName).o
#ccc=gcc $(ccopts) -c $(FileNameExt) -o $(FileName).o
cc=tcc.exe -run -lgd
ccc=tcc.exe -run -lgd

make.command=make
command.compile.*.c=$(ccc) -std=c99
```

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125151049.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## Replit 的 gnuplot 繪圖

&lt;small&gt;

- 在 Replit 平台必須先在 &lt;n style="color:red;"&gt;replit.nix&lt;/n&gt; 設定檔案中加入 &lt;n style="color:red;"&gt;pkgs.gnuplot&lt;/n&gt; 套件

- 假如希望在 Replit 平台使用中文字型檔案, 可以從[教育部網頁](https://language.moe.gov.tw/001/Upload/Files/site_content/M0001/edukai.pdf)下載後上傳到 repl 專案, 但因為檔案 edukai-4.0.ttf 約 15MB, 若不希望放入倉儲, 可以在 &lt;n style="color:red;"&gt;.gitignore&lt;/n&gt; 中設定

- 編譯與連結指令: cc hellognuplot.c, 執行指令: ./a.out

- [hellognuplot.c](https://mde.tw/cpnote/downloads/hellognuplot.c) 原始碼

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125160332.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## s.cycu.org 的 gnuplot 繪圖

&lt;small&gt;

- s.cycu.org 已經透過 &lt;n style="color:red;"&gt;sudo apt install build-essential&lt;/n&gt; 安裝 C 的編譯環境

- s.cycu.org 已經透過 &lt;n style="color:red;"&gt;sudo apt install gnuplot&lt;/n&gt; 安裝 gnuplot 套件

- 假如希望在 s.cycu.org 伺服器使用中文字型檔案, 可以從[教育部網頁](https://language.moe.gov.tw/001/Upload/Files/site_content/M0001/edukai.pdf)下載後上傳到 repl 專案, 但因為檔案 edukai-4.0.ttf 約 15MB, 若不希望放入倉儲, 可以在 &lt;n style="color:red;"&gt;.gitignore&lt;/n&gt; 中設定

- 編譯與連結指令: cc hellognuplot.c, 執行指令: ./a.out

- [hellognuplot.c](https://mde.tw/cpnote/downloads/hellognuplot.c) 原始碼

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125162002.1">&lt;section&gt;
    @others
&lt;/section&gt;</t>
<t tx="leo.20231125162033.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## Replit 上維護倉儲內容

&lt;small&gt;

- 以電子郵箱註冊作為 Replit 登入帳號後, 登入自己的 Github 帳號

- 登入 Replit 後, 選擇 account 下方的 Connected services, 點選 Github 右邊的 Connect, 以便連結與 Github 的權限

- 利用 Replit 的 create Repl 建立專案, 且是利用 Import 的方式選擇 Python 作為 Template, 將 Github 倉儲輸入 Repl

- 首先輸入 python3 main.py 作為 .replit 的內容, 之後只要按下 Run 就是執行 python3 main.py

- 利用[密碼產生程式](https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py), 建立 secrets 頁面中的 config 管理者登入密碼變數

- 利用 Shell 指令: &lt;n style="color:red;"&gt;git submodule update --init&lt;/n&gt; 取下子模組, 並以 &lt;n style="color:red;"&gt;pip install flask flask_cors bs4 lxml pelican markdown gevent&lt;/n&gt; 安裝 Run 執行所需的 Python 模組

- 最後按下 Run 就可以啟動編輯網站, 編輯結束利用 Convert 轉為靜態網站, 最後利用 Git 頁面新增提交並 push.

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125162106.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## s.cycu.org 上維護倉儲內容

&lt;small&gt;

- 登入 s.cycu.org 之後, 以 &lt;n style="color:red;"&gt;ssh-keygen&lt;/n&gt; 指令, 連續按下三個 Enter, 就可以在 .ssh 目錄建立 id_rsa 與 id_rsa.pub

- 在 Windows 11 以 sftp 帳號@s.cycu.org 登入遠端檔案傳輸模式後, cd .ssh 之後, 在 .ssh 目錄以 &lt;n style="color:red;"&gt;get id_rsa*&lt;/n&gt; 取下私鑰與公鑰

- 利用 SciTE 開啟 id_rsa.pub, 並將公鑰內容送到 Github 帳號 Settings 中的 SSH and GPG keys

- 下載 [config](https://mde.tw/cpnote/downloads/config) SSH 設定檔案, 利用 sftp 模式, 以 put config 送到 s.cycu.org 帳號下的 .ssh 目錄, 此時在 s.cycu.org 已經可以利用 github.com 昨為代號, 透過代理主機與私鑰, 以 &lt;n style="color:red;"&gt;git clone --recurse-submodules git@github.com:帳號/倉儲名稱.git&lt;/n&gt; 取下倉儲內容, 並在 python3 server.py 之後啟動編輯網站, 改版後 Convert 轉靜態, 並透過 &lt;n style="color:red;"&gt;chmod u+x acp&lt;/n&gt; 讓 acp 可以執行.

- 改版並轉靜態之後, 就可以利用 acp 按鈕執行新增提交與推送

- 若已知同一倉儲已經在其他地方將改版資料推向 Github, 在 s.cycu.org 執行改版程序之前, 可以利用 &lt;n style="color:red;"&gt;git pull&lt;/n&gt; 減少之後推送時必須解決的衝突內容

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20231125162149.1">&lt;section data-markdown&gt;
&lt;script type="text/template"&gt;
## Windows 上維護倉儲內容

&lt;small&gt;

- 之前若已經在 s.cycu.org 登錄 id_rsa.pub 作為 Github 公鑰, 則取下的對應 &lt;n style="color:red;"&gt;id_rsa&lt;/n&gt; 可以利用 puttygen 轉為 .ppk 使用

- 利用 putty 建立名稱與連線 session 都選為 &lt;n style="color:red;"&gt;github.com&lt;/n&gt; 的設定, 讓 Windows 與 s.cycu.org 進行 git clone 有相同的指令

- 開啟 puttygent, load 進先前從 s.cycu.org 主機 .ssh 目錄取下的 id_rsa, 將原先 OpenSSL 格式的私鑰&lt;n style="color:red;"&gt;存為 .ppk 格式&lt;/n&gt;

- 在 putty 所建立的 &lt;n style="color:red;"&gt;github.com&lt;/n&gt; session 必須指定位於 y: 目錄, 以免之後若隨身碟代號改變而失效

- github.com session 設定 &lt;n style="color:red;"&gt;proxy&lt;/n&gt; 與 &lt;n style="color:red;"&gt;private key&lt;/n&gt; 位置後, 必須利用 Open 測試是否可以 ssh 連線到 github.com

- putty session 設定完成後, 必須將位於 &lt;n style="color:red;"&gt;Computer\HKEY_CURRENT_USER\SOFTWARE\SimonTatham&lt;/n&gt; 的 .reg 導出, 之後只要利用滑鼠雙點擊就可以完成 putty session 設定

- 以 &lt;n style="color:red;"&gt;git clone --recurse-submodules git@github.com:帳號/倉儲名稱.git&lt;/n&gt; 取下倉儲內容, 進入倉儲後, 以 &lt;n style="color:red;"&gt;cms&lt;/n&gt; 啟動編輯網站, 改版後 Convert 然後利用 acp 推送到 Github

&lt;/small&gt;
&lt;/script&gt;
&lt;/section&gt;

</t>
</tnodes>
</leo_file>
